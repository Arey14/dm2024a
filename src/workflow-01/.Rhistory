# limpio la memoria
rm(list = ls(all.names = TRUE)) # remove all objects
gc(full = TRUE) # garbage collection
require("data.table")
require("yaml")
require("Rcpp")
require("lightgbm")
#cargo la libreria
# args <- c( "~/dm2024a" )
args <- commandArgs(trailingOnly=TRUE)
source( paste0( args[1] , "/src/lib/action_lib.r" ) )
#------------------------------------------------------------------------------
VPOS_CORTE <- c()
fganancia_lgbm_meseta <- function(probs, datos) {
vlabels <- get_field(datos, "label")
vpesos <- get_field(datos, "weight")
tbl <- as.data.table(list(
"prob" = probs,
"gan" = ifelse(vlabels == 1 & vpesos > 1, envg$PARAM$train$gan1, envg$PARAM$train$gan0)
))
setorder(tbl, -prob)
tbl[, posicion := .I]
tbl[, gan_acum := cumsum(gan)]
setorder(tbl, -gan_acum) # voy por la meseta
gan <- mean(tbl[1:500, gan_acum]) # meseta de tamaÃ±o 500
pos_meseta <- tbl[1:500, median(posicion)]
VPOS_CORTE <<- c(VPOS_CORTE, pos_meseta)
return(list(
"name" = "ganancia",
"value" = gan,
"higher_better" = TRUE
))
}
GVEZ <- 1
CanaritosAsesinos <- function(
canaritos_ratio,
canaritos_desvios,
canaritos_semilla) {
cat( "inicio CanaritosAsesinos()\n")
gc()
dataset[, clase01 := 0L ]
dataset[ get(envg$PARAM$dataset_metadata$clase) %in% envg$PARAM$train$clase01_valor1,
clase01 := 1L ]
set.seed(canaritos_semilla, kind = "L'Ecuyer-CMRG")
for (i in 1:(ncol(dataset) * canaritos_ratio)) {
dataset[, paste0("canarito", i) := runif(nrow(dataset))]
}
campos_buenos <- setdiff(
colnames(dataset),
c( campitos, "clase01")
)
azar <- runif(nrow(dataset))
dataset[, entrenamiento :=
as.integer( get(envg$PARAM$dataset_metadata$periodo) %in% envg$PARAM$train$training &
(clase01 == 1 | azar < envg$PARAM$train$undersampling))]
dtrain <- lgb.Dataset(
data = data.matrix(dataset[entrenamiento == TRUE, campos_buenos, with = FALSE]),
label = dataset[entrenamiento == TRUE, clase01],
weight = dataset[
entrenamiento == TRUE,
ifelse(get(envg$PARAM$dataset_metadata$clase) %in% envg$PARAM$train$positivos, 1.0000001, 1.0)
],
free_raw_data = FALSE
)
dvalid <- lgb.Dataset(
data = data.matrix(dataset[get(envg$PARAM$dataset_metadata$periodo) %in% envg$PARAM$train$validation, campos_buenos, with = FALSE]),
label = dataset[get(envg$PARAM$dataset_metadata$periodo) %in% envg$PARAM$train$validation, clase01],
weight = dataset[
get(envg$PARAM$dataset_metadata$periodo) %in% envg$PARAM$train$validation,
ifelse( get(envg$PARAM$dataset_metadata$clase) %in% envg$PARAM$train$positivos, 1.0000001, 1.0)
],
free_raw_data = FALSE
)
param <- list(
objective = "binary",
metric = "custom",
first_metric_only = TRUE,
boost_from_average = TRUE,
feature_pre_filter = FALSE,
verbosity = -100,
seed = canaritos_semilla,
max_depth = -1, # -1 significa no limitar,  por ahora lo dejo fijo
min_gain_to_split = 0.0, # por ahora, lo dejo fijo
lambda_l1 = 0.0, # por ahora, lo dejo fijo
lambda_l2 = 0.0, # por ahora, lo dejo fijo
max_bin = 31, # por ahora, lo dejo fijo
num_iterations = 9999, # un numero grande, lo limita early_stopping_rounds
force_row_wise = TRUE, # para que los alumnos no se atemoricen con  warning
learning_rate = 0.065,
feature_fraction = 1.0, # lo seteo en 1
min_data_in_leaf = 260,
num_leaves = 60,
early_stopping_rounds = 200,
num_threads = 1
)
set.seed(canaritos_semilla, kind = "L'Ecuyer-CMRG")
modelo <- lgb.train(
data = dtrain,
valids = list(valid = dvalid),
eval = fganancia_lgbm_meseta,
param = param,
verbose = -100
)
tb_importancia <- lgb.importance(model = modelo)
tb_importancia[, pos := .I]
fwrite(tb_importancia,
file = paste0("impo_", GVEZ, ".txt"),
sep = "\t"
)
GVEZ <<- GVEZ + 1
umbral <- tb_importancia[
Feature %like% "canarito",
median(pos) + canaritos_desvios * sd(pos)
] # Atencion corto en la mediana mas desvios!!
col_utiles <- tb_importancia[
pos < umbral & !(Feature %like% "canarito"),
Feature
]
col_utiles <- unique(c(
col_utiles,
c(campitos, "mes")
))
col_inutiles <- setdiff(colnames(dataset), col_utiles)
dataset[, (col_inutiles) := NULL]
cat( "fin CanaritosAsesinos()\n")
}
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Aqui empieza el programa
cat( "z561_CN_canaritos_asesinos.r  START\n")
action_inicializar()
source("~/Desktop/ITBA/Mineria de Datos/dm2024a/src/workflow-01/z509_workflow_base.r")
