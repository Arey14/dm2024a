```{r}
# Install and load necessary packages
library(data.table)
library(Boruta)
library(mice)

# Load your dataset
 data <- fread("~/Desktop/ITBA/Mineria de Datos/datasets/dataset_pequeno.csv")

# For demonstration, we'll use the iris dataset and introduce some NAs
#data <- iris
#data[sample(1:nrow(data), 20), sample(1:ncol(data), 2)] <- NA  # Introduce NAs randomly

# Step 1: Identify missing data
missing_data_summary <- sapply(data, function(x) sum(is.na(x)))
print("Missing data summary:")
print(missing_data_summary)

# Step 2: Handle missing data (choose one approach)
# Approach 1: Remove rows with missing values
 data_clean <- na.omit(data)

# Approach 2: Remove columns with missing values
# data_clean <- data[, colSums(is.na(data)) == 0]

# Approach 3: Impute missing values (using mean imputation here)
#imputed_data <- mice(data, m = 1, method = 'mean', maxit = 50, seed = 123)
#data_clean <- complete(imputed_data)

# Step 3: Run Boruta with cleaned data
target <- "clase_ternaria"
boruta_output <- Boruta(clase_ternaria ~ ., data = data_clean, doTrace = 2, maxRuns = 100)

# Get the decision results for all variables
boruta_decisions <- boruta_output$finalDecision

# Filter the variables classified as 'Rejected' (unimportant)
unimportant_vars <- names(boruta_decisions)[boruta_decisions == "Rejected"]

# Print the unimportant variables
print("Unimportant variables:")
print(unimportant_vars)

```
